---
grails:
    profile: web-plugin
    codegen:
        defaultPackage: com.k_int.dm.refdata
    spring:
        transactionManagement:
            proxies: false
    gorm:
        # Whether to autowire entities. 
        # Disabled by default for performance reasons.
        autowire: false         
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
        multiTenancy:
            # http://gorm.grails.org/6.0.x/hibernate/manual/#_schema_per_tenant
            mode: SCHEMA
            # SessionTenantResolver requires a gorm.tenantId attribute on the HTTPRequest - we use a filter to 
            # Set this depending upon the target environment
            # tenantResolverClass: org.grails.datastore.mapping.multitenancy.web.SessionTenantResolver
            # NOrmally we would do this via the spring tenantResolver bean - but for testing purposes, we use the static config provided by this class
            # For transparency, we also override this setting in the environments setting below, making this setting redundant, but it's left here
            # for visibility
            tenantResolverClass: com.k_int.gorm.multitenant.SessionTenantResolver
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

environments:
    test:
        grails:
            gorm:
                multiTenancy:
                    tenantResolverClass: com.k_int.gorm.multitenant.SessionTenantResolver
                    schemaHandler: com.k_int.gorm.multitenant.SchemaHandler
                    # tenantResolverClass: org.grails.datastore.mapping.multitenancy.web.SystemPropertyTenantResolver
        dataSource:
            # dbCreate: create-drop  - create drops all before creating, create-drop drops after running all tests.
            dbCreate: create
            username: knowint
            password: knowint
            driverClassName: org.postgresql.Driver
            dialect: org.hibernate.dialect.PostgreSQL82Dialect
            url: jdbc:postgresql://localhost:5432/knowint_test
            # Schema handler is like the default except it does CREATE SCHEMA IF NOT EXISTS X instead of CREATE SCHEMA X
            schemaHandler: com.k_int.gorm.multitenant.SchemaHandler
#            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#            dialect: com.k_int.yarm.utils.PgSQLCustomDialect
